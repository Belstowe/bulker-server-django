name: Django CI Workflow

# Triggers that workflow on such occasions, as pull request/push to master/develop
on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

jobs:
  code-style-job:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Check Python version
        run: python --version
      - name: Install and use Pycodestyle
        run: |
          python -m pip install pycodestyle==2.8.0
          pycodestyle --statistics .

  health-check-job:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ['3.9', '3.10'] # Run job for both Python 3.9 and 3.10
    services:
      mongodb:
        image: mongo:5.0.6
        env:
          MONGO_INITDB_ROOT_USERNAME: mongoadmin
          MONGO_INITDB_ROOT_PASSWORD: Password-To-Pass
        ports:
          - 27017:27017
    steps:
      - name: Checkout code       # Pulling a project commit that triggered the workflow
        uses: actions/checkout@v2
      - name: Cache dependency    # Create cache for project dependencies to improve performance
        uses: actions/cache@v2
        with:
          path: ~/.cache/~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Check Python version
        run: python --version
      - name: Install requirements
        run: python -m pip install -r requirements.txt
      - name: Configure '.env' file
        run: |
          echo -e "MONGO_INITDB_ROOT_USERNAME=mongoadmin\nMONGO_INITDB_ROOT_PASSWORD=Password-To-Pass" > .env
          python confenv.py False
      - name: Run migrations
        run: python manage.py migrate
      - name: Run tests
        run: python manage.py test

  package-job:
    runs-on: ubuntu-20.04
    needs: [health-check-job]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to the container registry
        uses: docker/login-action@v1.12.0
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GKE_PASSWORD }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: gcr.io/${{ secrets.GKE_PROJECT }}/bulker-django-backend
          tags: type=sha
      - name: Build & Publish Image
        uses: docker/build-push-action@v2
        env:
          app_name: bulker-django-backend
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  bulker-deploy-job:
    runs-on: ubuntu-20.04
    needs: [package-job]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: 'auth'
        uses: google-github-actions/auth@v0.6.0
        with:
          credentials_json: ${{ secrets.GKE_PASSWORD }}
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          version: '371.0.0'
      - name: Set Repo Location
        id: repo
        run: echo "::set-output name=repo_name::gcr.io/${{secrets.GKE_PROJECT}}/bulker-django-backend:sha-$(git rev-parse --short HEAD)"
      - name: Check Repo Location
        run: echo ${{ steps.repo.outputs.repo_name }}
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      - name: Connect to Kubernetes cluster
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.GKE_PROJECT }}
      - name: Helm Deploy
        run: >
          helm upgrade
          --install
          --set image=${{ steps.repo.outputs.repo_name }}
          --set db_user=${{ secrets.DB_USER }}
          --set db_password=${{ secrets.DB_PASSWORD }}
          --set db_host=${{ secrets.DB_HOST }}
          --set-string db_port=${{ secrets.DB_PORT }}
          --set db_name=${{ secrets.DB_NAME }}
          --set host=${{ secrets.GKE_SERVICE_ADDRESS }}
          --wait
          --atomic
          bulker-django-backend
          ./charts
      - name: Check pods
        run: kubectl get pods